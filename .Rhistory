if(startsWith(x = linus, prefix = "##")) next
annot <- unlist(strsplit(x = linus, split = "\t", fixed = TRUE))
break
annot[4] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[5] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[1] <- "squouich"
writeLines(text = paste(annot, sep = "\t"), con = file_out)
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(nchar(linus) == 0) break
if(! startsWith(x = linus, prefix = ">")) writeLines(text = linus, con = file_out)
}
close(file_in)
close(file_out)
# rm(list = ls())
rm(list = ls())
# file_in <- file("to_squish.gff", open = "r")
file_in <- file("11111_a_trim.gff", open = "r")
file_out <- file("gff_out_R.gff", open = "w")
# n_line <- 0
contig_list <- list()
to_add <- 0
while(TRUE){
linus <- readLines(con = file_in, n = 1)
# n_line <- n_line + 1
if(linus == "##FASTA") break
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(startsWith(x = linus, prefix = ">")){
contig_name <- linus
contig_list[[linus]] <- to_add
}
else{
to_add <- to_add + nchar(linus)
}
}
seek(con = file_in, where = 0)
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(linus == "##FASTA") break
if(startsWith(x = linus, prefix = "##")) next
annot <- unlist(strsplit(x = linus, split = "\t", fixed = TRUE))
break
annot[4] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[5] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[1] <- "squouich"
writeLines(text = paste(annot, sep = "\t"), con = file_out)
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(! startsWith(x = linus, prefix = ">")) writeLines(text = linus, con = file_out)
}
close(file_in)
close(file_out)
# rm(list = ls())
annot[1]
annot[1] <- "squoisish"
rm(list = ls())
# file_in <- file("to_squish.gff", open = "r")
file_in <- file("11111_a_trim.gff", open = "r")
file_out <- file("gff_out_R.gff", open = "w")
# n_line <- 0
contig_list <- list()
to_add <- 0
while(TRUE){
linus <- readLines(con = file_in, n = 1)
# n_line <- n_line + 1
if(linus == "##FASTA") break
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(startsWith(x = linus, prefix = ">")){
contig_name <- linus
contig_list[[linus]] <- to_add
}
else{
to_add <- to_add + nchar(linus)
}
}
seek(con = file_in, where = 0)
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(linus == "##FASTA") break
if(startsWith(x = linus, prefix = "##")) next
annot <- unlist(strsplit(x = linus, split = "\t", fixed = TRUE))
annot[4] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[5] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[1] <- "squouich"
writeLines(text = paste(annot, sep = "\t"), con = file_out)
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(! startsWith(x = linus, prefix = ">")) writeLines(text = linus, con = file_out)
}
close(file_in)
close(file_out)
# rm(list = ls())
rm(list = ls())
# file_in <- file("to_squish.gff", open = "r")
file_in <- file("11111_a_trim.gff", open = "r")
file_out <- file("gff_out_R.gff", open = "w")
# n_line <- 0
contig_list <- list()
to_add <- 0
while(TRUE){
linus <- readLines(con = file_in, n = 1)
# n_line <- n_line + 1
if(linus == "##FASTA") break
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(startsWith(x = linus, prefix = ">")){
contig_name <- linus
contig_list[[linus]] <- to_add
}
else{
to_add <- to_add + nchar(linus)
}
}
seek(con = file_in, where = 0)
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(linus == "##FASTA") break
if(startsWith(x = linus, prefix = "##")) next
annot <- unlist(strsplit(x = linus, split = "\t", fixed = TRUE))
annot[4] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[5] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[1] <- "squouich"
writeLines(text = paste(annot, collapse = "\t"), con = file_out)
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(! startsWith(x = linus, prefix = ">")) writeLines(text = linus, con = file_out)
}
close(file_in)
close(file_out)
# rm(list = ls())
# file_in <- file("to_squish.gff", open = "r")
file_in <- file("11111_a_trim.gff", open = "r")
file_out <- file("gff_out_R.gff", open = "w")
# n_line <- 0
contig_list <- list()
to_add <- 0
while(TRUE){
linus <- readLines(con = file_in, n = 1)
# n_line <- n_line + 1
if(linus == "##FASTA") break
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(startsWith(x = linus, prefix = ">")){
contig_name <- linus
contig_list[[linus]] <- to_add
}
else{
to_add <- to_add + nchar(linus)
}
}
seek(con = file_in, where = 0)
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(linus == "##FASTA"){
writeLines(text = linus, con = file_out)
break
}
if(startsWith(x = linus, prefix = "##")) next
annot <- unlist(strsplit(x = linus, split = "\t", fixed = TRUE))
annot[4] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[5] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[1] <- "squouich"
writeLines(text = paste(annot, collapse = "\t"), con = file_out)
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(! startsWith(x = linus, prefix = ">")) writeLines(text = linus, con = file_out)
}
close(file_in)
close(file_out)
# rm(list = ls())
install.packages("lintr")
library("lintr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
install.packages("styler")
library("styler", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
system.time(
for(i in 1:100){
# file_in <- file("to_squish.gff", open = "r")
file_in <- file("11111_a_trim.gff", open = "r")
file_out <- file("gff_out_R.gff", open = "w")
# n_line <- 0
contig_list <- list()
to_add <- 0
while(TRUE){
linus <- readLines(con = file_in, n = 1)
# n_line <- n_line + 1
if(linus == "##FASTA") break
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(startsWith(x = linus, prefix = ">")){
contig_name <- linus
contig_list[[linus]] <- to_add
}
else{
to_add <- to_add + nchar(linus)
}
}
seek(con = file_in, where = 0)
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(linus == "##FASTA"){
writeLines(text = linus, con = file_out)
break
}
if(startsWith(x = linus, prefix = "##")) next
annot <- unlist(strsplit(x = linus, split = "\t", fixed = TRUE))
annot[4] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[5] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[1] <- "squouich"
writeLines(text = paste(annot, collapse = "\t"), con = file_out)
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(! startsWith(x = linus, prefix = ">")) writeLines(text = linus, con = file_out)
}
close(file_in)
close(file_out)
})
system.time(
for(i in 1:100){
# file_in <- file("to_squish.gff", open = "r")
file_in <- file("11111_a_trim.gff", open = "r")
file_out <- file("gff_out_R.gff", open = "w")
# n_line <- 0
contig_list <- list()
to_add <- 0
while(TRUE){
linus <- readLines(con = file_in, n = 1)
# n_line <- n_line + 1
if(linus == "##FASTA") break
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(startsWith(x = linus, prefix = ">")){
contig_name <- linus
contig_list[[linus]] <- to_add
}
else{
to_add <- to_add + nchar(linus)
}
}
seek(con = file_in, where = 0)
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(linus == "##FASTA"){
writeLines(text = linus, con = file_out)
break
}
if(startsWith(x = linus, prefix = "##")) next
annot <- unlist(strsplit(x = linus, split = "\t", fixed = TRUE))
annot[4] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[5] <- as.numeric(annot[4]) + contig_list[[paste0(">",annot[1])]]
annot[1] <- "squouich"
writeLines(text = paste(annot, collapse = "\t"), con = file_out)
}
while(TRUE){
linus <- readLines(con = file_in, n = 1)
if(length(linus) == 0) break
if(! startsWith(x = linus, prefix = ">")) writeLines(text = linus, con = file_out)
}
close(file_in)
close(file_out)
})
file_in
# file_in <- file("to_squish.gff", open = "r")
file_in <- file("11111_a_trim.gff", open = "r")
for(zgeg in file_in) print(zgeg)
rm(list = ls())
lintr::lint("r_gff_squish.R")
lintr::lint("r_gff_squish.R")
lintr::lint("r_gff_squish.R")
lintr::lint("r_gff_squish.R")
library("lintr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
args <- commandArgs(trailingOnly = TRUE)
for (i,j in 1:(length(args) / 2)){
print(i)
arga[args[i]] <- args[i+1]
i <- 100
}
for (i in 1:(length(args) / 2)){
for(j in 2:length(args) /2){
print(i)
arga[args[i]] <- args[j]
}}
arga <- list()
for (i in 1:(length(args) / 2)){
for(j in 2:length(args) /2){
print(i)
arga[args[i]] <- args[j]
}}
seq(1:10)
seq(1:10, 2)
seq_along(1:10, 2)
seq_along(1:10)
seq(1, 10, 2)
for (i in seq(1,(length(args), 2))){
print(i)
arga[args[i]] <- args[i+1]
}
styler:::style_selection()
library(lintr)
styler:::style_selection()
styler:::style_active_file()
lintr::lint("r_gff_squish.R")
styler:::style_active_file()
styler:::style_active_file()
styler:::style_selection()
readLines(con = file("to_squish.gff"))
for (linus in readLines(con = file("to_squish.gff"))){
1+1
}
install.packages("profmem")
profmem::profmem(
for (linus in readLines(con = in_file)){
next
}
close(con = in_file)
)
profmem::profmem(
{
for (linus in readLines(con = in_file)){
next
}
close(con = in_file)
})
library("profmem", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
detach("package:profmem", unload=TRUE)
remove.packages("profmem", lib="~/R/x86_64-pc-linux-gnu-library/3.5")
system.time(
for (linus in readLines(con = in_file)) {
next
}
close(con = in_file)
)
in_file <- file("to_squish.gff", "r")
system.time(
for (linus in readLines(con = in_file)) {
next
}
close(con = in_file)
)
for (linus in readLines(con = in_file)) {
next
}
system.time(
for (linus in readLines(con = in_file)) {
next
}
close(con = in_file)
)
styler:::style_selection()
in_file <- file("to_squish.gff", "r")
system.time(
for (linus in readLines(con = in_file)) {
next}
close(con = in_file)
)
in_file <- file("to_squish.gff", "r")
system.time(
for (linus in readLines(con = in_file)){
next
}
close(con = in_file)
)
in_file <- file("to_squish.gff", "r")
close(con = in_file)
in_file <- file("to_squish.gff", "r")
system.time(
for (linus in readLines(con = in_file)) {
next
}
)
install.packages("microbenchmark")
microbenchmark::microbenchmark(
for (linus in readLines(con = in_file)) {
next
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(
for (linus in readLines(con = in_file)) {
linus_ <- linus
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(
while (TRUE) {
linus <- readlines(in_file, 1)
if (length(linus) == 0) break
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(
for (linus in readLines(con = in_file)) {
linus_ <- linus
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(
while (TRUE) {
linus <- readLines(in_file, 1)
if (length(linus) == 0) break
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(unit = "ms",
for (linus in readLines(con = in_file)) {
linus_ <- linus
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(unit = "ms",
while (TRUE) {
linus <- readLines(in_file, 1)
if (length(linus) == 0) break
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(unit = "ms",times = 1e4,
for (linus in readLines(con = in_file)) {
linus_ <- linus
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(unit = "ms", times = 1e4,
while (TRUE) {
linus <- readLines(in_file, 1)
if (length(linus) == 0) break
}
)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(unit = "ms",times = 1e3,
for (linus in readLines(con = in_file)) {
linus_ <- linus
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(unit = "ms", times = 1e3,
while (TRUE) {
linus <- readLines(in_file, 1)
if (length(linus) == 0) break
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(unit = "ms",times = 5e3,
for (linus in readLines(con = in_file)) {
linus_ <- linus
}
)
close(con = in_file)
in_file <- file("to_squish.gff", "r")
microbenchmark::microbenchmark(unit = "ms", times = 5e3,
while (TRUE) {
linus <- readLines(in_file, 1)
if (length(linus) == 0) break
}
)
close(con = in_file)
in_file <- file("11111_a_trim.gff", "r")
microbenchmark::microbenchmark(unit = "ms",times = 1e3,
for (linus in readLines(con = in_file)) {
linus_ <- linus
}
)
close(con = in_file)
in_file <- file("11111_a_trim.gff", "r")
microbenchmark::microbenchmark(unit = "ms",times = 5e3,
for (linus in readLines(con = in_file)) {
linus_ <- linus
}
)
close(con = in_file)
in_file <- file("11111_a_trim.gff", "r")
microbenchmark::microbenchmark(unit = "ms", times = 5e3,
while (TRUE) {
linus <- readLines(in_file, 1)
if (length(linus) == 0) break
}
)
close(con = in_file)
